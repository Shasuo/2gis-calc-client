import { useEffect, useState } from "react";
import {
  CalculatorMain,
  type CalcInputProps,
} from "./assets/components/hooks/CalculatorMain/CalculatorMain";

const BottomTextBlock = ({ text }: { text: string }) => {
  return (
    <div className="max-w-[381.5px] text-[#B9B9B9] text-[18px] ">
      <img src="/star.svg" className="mb-4" />
      {text}
    </div>
  );
};

export default function App() {
  const [loading, setLoading] = useState(true);
  const [cities, setCities] = useState<CalcInputProps[]>([]);
  const [formats, setFormats] = useState<CalcInputProps[]>([]);

  const [calculatorData, setCalculatorData ] = useState({})

  useEffect(() => {
    console.log("–ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö");

    const CITIES_URL =
      "https://gist.githubusercontent.com/Shasuo/580a5a568c65c93dd73a8764901a0056/raw/2da3f84b3366357cd3283b4671ab7280670e5835/cities";
    const FORMATS_URL =
      "https://gist.githubusercontent.com/Shasuo/580a5a568c65c93dd73a8764901a0056/raw/a6518fc6f8369d25995b6bcd851d2dbfaeedbef0/format";

    const loadData = async () => {
      try {
        setLoading(true);

        const [citiesRes, formatsRes] = await Promise.all([
          fetch(CITIES_URL),
          fetch(FORMATS_URL),
        ]);

        if (!citiesRes.ok)
          throw new Error(
            `Cities: ${citiesRes.status} ${citiesRes.statusText}`
          );
        if (!formatsRes.ok)
          throw new Error(
            `Formats: ${formatsRes.status} ${formatsRes.statusText}`
          );

        const citiesData: CalcInputProps[] = await citiesRes.json();
        const formatsData: CalcInputProps[] = await formatsRes.json();

        setCities(citiesData);
        setFormats(formatsData);

        console.log("‚úÖ –ì–æ—Ä–æ–¥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", citiesData);
        console.log("‚úÖ –§–æ—Ä–º–∞—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", formatsData);
      } catch (err) {
        const errorMsg =
          err instanceof Error ? err.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞";
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", errorMsg);
      } finally {
        setLoading(false);
        console.log("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
      }
    };

    loadData();
  }, []);
  return (
    <>
      <div className="max-w-[794px] mx-auto pt-[50px]">
        {loading ? (
          <div className="loader mx-auto mt-20" />
        ) : (
          <div>
            <h2 className="text-[48px]">–ï—Å–µ–ø—Ç–µ—É –æ“£–∞–π</h2>
            <p className="text-[18px] mt-5">
              –ë“±–ª –∂–∞—Ä–Ω–∞–º–∞–ª—ã“õ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä.
              <br />
              –û–ª 2GIS-—Ç–µ –∂–∞—Ä–Ω–∞–º–∞ –æ—Ä–Ω–∞–ª–∞—Å—Ç—ã—Ä—É–¥—ã“£ –±–æ–ª–∂–∞–ª–¥—ã –±–∞“ì–∞—Å—ã–Ω –µ—Å–µ–ø—Ç–µ—É–≥–µ
              –∫”©–º–µ–∫—Ç–µ—Å–µ–¥—ñ.
            </p>
            <CalculatorMain />
            <section className="mt-10 flex items-start gap-8">
              <BottomTextBlock text="–ë“±–ª ¬´¬´–°—Ç–∞—Ä—Ç –ú–µ–¥–∏–∞¬ª –ø–∞–∫–µ—Ç—ñ¬ª. –ø–æ–∑–∏—Ü–∏—è—Å—ã “Ø—à—ñ–Ω 2GIS-—Ç–µ –∂–∞—Ä–Ω–∞–º–∞ –æ—Ä–Ω–∞–ª–∞—Å—Ç—ã—Ä—É–¥—ã“£ “ö“ö–° –∂–æ“õ –±–æ–ª–∂–∞–ª–¥—ã –±–∞“ì–∞—Å—ã. “ö–æ—Ä—ã—Ç—ã–Ω–¥—ã —Å–æ–º–∞ –∂–∞—Ä–Ω–∞–º–∞–ª—ã“õ –ø–æ–∑–∏—Ü–∏—è–ª–∞—Ä –∂–∏—ã–Ω—Ç—ã“ì—ã–Ω–∞, –æ—Ä–Ω–∞–ª–∞—Å—Ç—ã—Ä—É –º–µ—Ä–∑—ñ–º—ñ–Ω–µ, —Ñ–∏–ª–∏–∞–ª–¥–∞—Ä —Å–∞–Ω—ã–Ω–∞ –∂”ô–Ω–µ —Å—ñ–∑–¥—ñ“£ –±–∏–∑–Ω–µ—Å—ñ“£—ñ–∑ –∫—ñ—Ä–µ—Ç—ñ–Ω –±–∞“ì–∞ —Ç–æ–±—ã–Ω–∞ –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã. –ê“õ—ã—Ä“ì—ã –±–∞“ì–∞ –º–µ–Ω –ø–æ–∑–∏—Ü–∏—è–ª–∞—Ä–¥—ã “õ–æ—Å—É —à–∞—Ä—Ç—Ç–∞—Ä—ã–Ω –±—ñ–ª—É “Ø—à—ñ–Ω 2GIS –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–Ω–µ —Ö–∞–±–∞—Ä–ª–∞—Å—ã“£—ã–∑." />
              <BottomTextBlock text="–ë–∞“ì–∞ 6 –∞–π“ì–∞ –∂–∞—Ä–Ω–∞–º–∞“ì–∞ –µ—Å–µ–ø—Ç–µ–ª–≥–µ–Ω ‚Äî –±“±–ª —Ç–∞“£–¥–∞–ª“ì–∞–Ω “õ–∞–ª–∞ “Ø—à—ñ–Ω –µ“£ –º–∏–Ω–∏–º–∞–ª–¥—ã –º–µ—Ä–∑—ñ–º" />
            </section>
          </div>
        )}
      </div>
    </>
  );
}
